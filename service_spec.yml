# Latest service_spec.yml file can be obtained from https://git.corp.adobe.com/adobe-platform/service-spec/blob/master/spec.yaml

service_name: discoverservice

# Operational
# Service Code is code generated by 'Atlas service registry' for your service. To generate one, go to https://atlas.adobe.io
# Read more about how to create an Atlas service code here: https://wiki.corp.adobe.com/x/N4O1ag
service_code: discoverservice

# Specify the owner of the service. Required for CCF compliance.
adobe_owner: PSX

version_control:
  base_branch: main

# Possible values are: Public, Internal, Confidential, Restricted.
data_classification: [Internal, Confidential]

#How to obtain correct cost center for your service: https://wiki.corp.adobe.com/x/TVr4W
adobe_cost_centers:
  # Mandatory if Dev or Stage environment is present
  # ADUS cost center is required in case of opex (Operational Expense)
  opex:
    # ADUS cost center (US-based)
    adus: 101947
  # Mandatory if Prod environment is present.
  # Both ADUS and ADIR cost centers are required in case of cogs (Cost of Goods Sold)
  cogs:
    # ADUS cost center (US-based)
    adus: 101947
    # ADIR cost center (Ireland-based)
    adir: 5488896

alerts:
  # Used to send the notification mails to the given list of IDs.
  # Accepts an array of email IDs.
  # At least one email ID is mandatory. Required for CCF compliance.
  emails: [pratesha@adobe.com,syed@adobe.com,raubinsharya@adobe.com]



# Mandatory
# List of teams and their associated roles.
# There should be at least one item in this array.
# Only pre-defined roles can be used. The pre-defined roles are:
#   1. ethos_deployments_admin - Grants admin permissions on Moonbeam and Flight Director.
#   2. ethos_deployments_deployer - Grants deploy permissions on Moonbeam and Flight Director.
# At least one team should have 'ethos_deployments_admin' role.
# The person onboarding or re-onboarding the service should be part of atleast one team with 'ethos_deployments_admin' role.
# 'Mandatory' for new services getting onboarded.
# 'Optional' for existing services getting re-onboarded, for backward compatibility reasons.
team_access_control:
  -
    # Mandatory
    # Name of one of Github teams attached with this repository.
    name: psx-web
    # Mandatory
    # Array of roles. Allowed value are one or more of the pre-defined roles mentioned above.
    roles: [ethos_deployments_admin]
  -
    name: psx-web-deploy
    # Default value for role is 'ethos_deployments_deployer'.
    roles: [ethos_deployments_deployer]

# secret_providers:
#   # Mandatory.
#   # Name of the secret provider.
#   - name: cst_vault

images:
  - id: discoverservice-img #should be same as defined under Makefile

containers:
  - id: psxweb
    image_id: discoverservice-img
    # Allowed values: DB, Cache, Worker, Router, AppServer, WebServer, DockerHost, LB, other (in case the none of listed values applies).
    class: WebServer
    # See https://git.corp.adobe.com/adobe-platform/service-spec/blob/60b4cca08bacb91657c20761939716b93f361a9a/spec.yaml#L141
    arch_path: CC.PSX.PSXWebServer  #modify it as per microservice name
    # runtime_env_var_files: #env vars common to prod/stage/qa
    #   - path: .ethos/runtime_env_vars/common.yml

environments:
  - name: QA
    cluster_type: STAGE
    cluster_rbac_ldap:
      read:
        - GRP-COLOR-READONLY-K8S
      debug:
        - GRP-COLOR-DEBUG-K8S
    rollback_on_failure: true
    containers:
      - id: psxweb
        topology: inet
        inet_port: 3000
        health_check:
          path: /ping
        cpus: 1
        mem: 2048
        instances: 2
        # runtime_env_var_files:
        #   - path: .ethos/runtime_env_vars/qa.yml
        scaling:
          min_containers: 2
          max_containers: 3
          cpu_low_watermark: 30
          cpu_high_watermark: 70

        # By default, Glider creates services that are only accessible via Adobe egress IPs.
        # If you wish to change this behavior, see https://git.corp.adobe.com/adobe-platform/service-spec/blob/f7d7969177b9eddad9b7bc991f4fbbab506b5fd8/spec.yaml#L341-L352
        gateway:
          type: adobeio

    regions:
      - name: or2
        # logging:
        #   - type: splunk
        #     attributes:
        #       index: psx_web_nonprod
        #       source_type: psx-web-qa-or2
        #       volume: high
        #       logging_region: us-east-1

      # - name: va6
      #   logging:
      #     - type: splunk
      #       attributes:
      #         index: psx_web_nonprod
      #         source_type: psx-web-qa-va6
      #         volume: high

  - name: Stage
    cluster_type: STAGE
    cluster_rbac_ldap:
      read:
        - GRP-COLOR-READONLY-K8S
      debug:
        - GRP-COLOR-DEBUG-K8S
    rollback_on_failure: true
    containers:
      - id: psxweb
        topology: inet
        inet_port: 3000
        health_check:
          path: /ping
        cpus: 1
        mem: 2048
        instances: 2
        # runtime_env_var_files: #env variables common to all regions in stage
        #   - path: .ethos/runtime_env_vars/stage.yml

        scaling:
          min_containers: 2
          max_containers: 4
          cpu_low_watermark: 30
          cpu_high_watermark: 70

        # By default, Glider creates services that are only accessible via Adobe egress IPs.
        # If you wish to change this behavior, see https://git.corp.adobe.com/adobe-platform/service-spec/blob/f7d7969177b9eddad9b7bc991f4fbbab506b5fd8/spec.yaml#L341-L352
        access_level: corp

    regions:
      - name: irl1
  #       logging:
  #         - type: splunk
  #           attributes:
  #             index: psx_web_nonprod
  #             source_type: psx-web-stage-irl1
  #             volume: high
  #             logging_region: us-east-1
      - name: va6
  #       logging:
  #         - type: splunk
  #           attributes:
  #             index: psx_web_nonprod
  #             source_type: psx-web-stage-va6
  #             volume: high
      - name: jpn3
      - name: or2

  # - name: Production
  #   cluster_type: PROD
  #   cluster_rbac_ldap:
  #     read:
  #       - GRP-PSX-WEB-USER
  #     debug:
  #       - GRP-PSX-WEB-ADMIN
  #   rollback_on_failure: true
  #   containers:
  #     - id: psx-web
  #       topology: inet
  #       inet_port: 8083
  #       health_check:
  #         path: /ping
  #       cpus: 1
  #       mem: 2048
  #       instances: 4
  #       # runtime_env_var_files:
  #       #   - path: .ethos/runtime_env_vars/prod.yml

  #       scaling:
  #         min_containers: 4
  #         max_containers: 8
  #         cpu_low_watermark: 30
  #         cpu_high_watermark: 70

  #       # By default, Glider creates services that are only accessible via Adobe egress IPs.
  #       # If you wish to change this behavior, see https://git.corp.adobe.com/adobe-platform/service-spec/blob/f7d7969177b9eddad9b7bc991f4fbbab506b5fd8/spec.yaml#L341-L352
  #       gateway:
  #          type: adobeio


  #   regions:
  #     - name: va6
  #       logging:
  #         - type: splunk
  #           attributes:
  #             index: psx_web_prod
  #             source_type: psx-web-prod-va6
  #             volume: high


  #     - name: or2
  #       logging:
  #         - type: splunk
  #           attributes:
  #             index: psx_web_prod
  #             source_type: psx-web-prod-or2
  #             volume: high
  #             logging_region: us-east-1

  #     - name: irl1
  #       logging:
  #         - type: splunk
  #           attributes:
  #             index: psx_web_prod
  #             source_type: psx-web-prod-irl1
  #             volume: high
  #             logging_region: us-east-1